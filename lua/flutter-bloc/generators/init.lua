-- local util = require("flutter-bloc.util")
-- local bloc_template = require("flutter-bloc.templates")
--
-- local M = {}
--
-- M.create_cubit = function()
--     local cubit_name = vim.fn.input("Cubit name: ")
--     if cubit_name == "" then
--         print('The cubit name must not be empty')
--         return
--     end
--
--     local snake_case_cubit_name = util.camel_to_snake(cubit_name)
--
--     -- Get the current buffer's path
--     local buf_directory = util.get_current_buffer_path()
--     buf_directory = buf_directory .. "cubit/" .. snake_case_cubit_name .. "_cubit/"
--
--     -- Get bloc path from user
--     local cubit_path = vim.fn.input("Cubit path: ", buf_directory)
--     if cubit_path == "" then
--         print('The Cubit path must not be empty')
--         return
--     end
--
--     -- Create a directory if it doesn't exist
--     vim.fn.mkdir(cubit_path, "p")
--
--     local files = {
--         [snake_case_cubit_name .. "_cubit.dart"] = bloc_template.create_cubit_template(cubit_name),
--         [snake_case_cubit_name .. "_state.dart"] = bloc_template.create_cubit_state_template(cubit_name),
--     }
--
--     -- Write templates to files
--     for file, content in pairs(files) do
--         util.write_file(cubit_path .. file, content)
--     end
--
--     -- Open the cubit file after creating it
--     vim.cmd("edit " .. cubit_path .. snake_case_cubit_name .. "_bloc.dart")
-- end
--
-- M.create_bloc = function()
--     local bloc_name = vim.fn.input("Bloc name: ")
--     if bloc_name == "" then
--         print('The bloc name must not be empty')
--         return
--     end
--
--     local snake_case_bloc_name = util.camel_to_snake(bloc_name)
--
--     -- Get the current buffer's path
--     local buf_directory = util.get_current_buffer_path()
--     buf_directory = buf_directory .. "bloc/" .. snake_case_bloc_name .. "_bloc/"
--
--     -- Get bloc path from user
--     local bloc_path = vim.fn.input("Bloc path: ", buf_directory)
--     if bloc_path == "" then
--         print('The bloc path must not be empty')
--         return
--     end
--
--     -- Create a directory if it doesn't exist
--     vim.fn.mkdir(bloc_path, "p")
--
--     local files = {
--         [snake_case_bloc_name .. "_bloc.dart"] = bloc_template.create_bloc_template(bloc_name),
--         [snake_case_bloc_name .. "_event.dart"] = bloc_template.create_event_template(bloc_name),
--         [snake_case_bloc_name .. "_state.dart"] = bloc_template.create_bloc_state_template(bloc_name),
--     }
--
--     -- Write templates to files
--     for file, content in pairs(files) do
--         util.write_file(bloc_path .. file, content)
--     end
--
--     -- Open the bloc file after creating it
--     vim.cmd("edit " .. bloc_path .. snake_case_bloc_name .. "_bloc.dart")
-- end
--
-- return M
